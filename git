linux安装git 
        sudo apt-get install git
设置用户名与邮箱
        git config --global user.name "Your Name"
        git config --global user.email "email@example.com"
把当前目录变成工作本地仓库
        git init
把文件放进暂存区
        git add 文件名
把文件放进当前分支
        git commit -m "备注说明"
查看仓库当前状态
        git status
查看文件被修改了什么内容
        git diff
查看提交日志
        git log --pretty=oneline
回退版本
        git reset --hard HEAD^
回退任意版本
        git reset --hard HEAD~数字
查看命令日志
        git reflog
撤销工作区的修改
　　git checkout --  文件名
撤销暂存区的修改，撤销工作区的修改
　　git reset HEAD 文件名
　　git checkout --  文件名
本地文件删除后，git版本库也删除
　　 git rm 文件名
本地文件删除后，回复本地的删除文件
　　git checkout -- 文件名
关联远程仓库，origin是远程库名字，后面是远程库实际地址
        git remote add origin git@github.com:LiuDaDa116/learngit.git
推送当前分支所有内容
　　git push -u origin maste
推送最新修改
　　git push origin master
克隆仓库
         git clone git@github.com:LiuDaDa116/learngit.git
查看分支
        git branch
创建分支
　　git branch <name>或者git branch <name>
切换分支
　　git checkout <name>或者git switch <name>
创建+切换分支
　　git checkout -b <name>或者git switch -c <name>
合并某分支到当前分支
　　git merge <name>
　　git merge --no-ff -m "" 要合并的分支名字
删除分支
　　git branch -d <name>
产生合并冲突手动解决冲突
分支合并图
        git log --graph
修复bug先拉分支、修复、合并、删除
保存工作现场
　　git stash
查看保存的现场
　　git stash list
回到工作现场
　　git stash pop
复制提交操作到当前分支
　　git cherry-pick 提交号码
强制删除分支
　　it branch -D 分支名字
推送分支
　　git push origin dev
创建远程分支到本地
　　git checkout -b dev origin/dev
查看远程库信息
　　git remote -v
本地新建的分支如果不推送到远程，对其他人就是不可见的；
从本地推送分支，使用git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交；
在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；
建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name；
从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。 
打标签
        git tag
        git tag 提交id
        git tag -a <tagname> -m "blablabla..."可以指定标签信息；
命令git push origin <tagname>可以推送一个本地标签；
命令git push origin --tags可以推送全部未推送过的本地标签；
命令git tag -d <tagname>可以删除一个本地标签；
命令git push origin :refs/tags/<tagname>可以删除一个远程标签。